import { ethers } from "hardhat";

/**
 * Script ƒë∆°n gi·∫£n ƒë·ªÉ chuy·ªÉn ETH t·ª´ deployer sang user1
 * Ch·∫°y v·ªõi: npx hardhat run scripts/0-transfer-eth.ts --network localhost
 */
async function main() {
    console.log("üöÄ B·∫Øt ƒë·∫ßu chuy·ªÉn ETH t·ª´ deployer sang user1...");

    // L·∫•y danh s√°ch accounts t·ª´ hardhat
    const [deployer, , user1] = await ethers.getSigners();

    console.log("üìã Th√¥ng tin accounts:");
    console.log("Deployer address:", deployer.address);
    console.log("User1 address:", user1.address);

    // Ki·ªÉm tra balance tr∆∞·ªõc khi chuy·ªÉn
    const deployerBalanceBefore = await ethers.provider.getBalance(deployer.address);
    const user1BalanceBefore = await ethers.provider.getBalance(user1.address);

    console.log("\nüí∞ Balance tr∆∞·ªõc khi chuy·ªÉn:");
    console.log("Deployer balance:", ethers.formatEther(deployerBalanceBefore), "ETH");
    console.log("User1 balance:", ethers.formatEther(user1BalanceBefore), "ETH");

    // S·ªë l∆∞·ª£ng ETH mu·ªën chuy·ªÉn (1 ETH)
    const transferAmount = ethers.parseEther("0.0001");

    console.log("\nüì§ ƒêang chuy·ªÉn", ethers.formatEther(transferAmount), "ETH t·ª´ deployer sang user1...");

    // Th·ª±c hi·ªán chuy·ªÉn ETH
    const tx = await deployer.sendTransaction({
        to: user1.address,
        value: transferAmount
    });

    console.log("Transaction hash:", tx.hash);

    // Ch·ªù transaction ƒë∆∞·ª£c confirm
    const receipt = await tx.wait();
    console.log("‚úÖ Transaction confirmed in block:", receipt?.blockNumber);

    // Ki·ªÉm tra balance sau khi chuy·ªÉn
    const deployerBalanceAfter = await ethers.provider.getBalance(deployer.address);
    const user1BalanceAfter = await ethers.provider.getBalance(user1.address);

    console.log("\nüí∞ Balance sau khi chuy·ªÉn:");
    console.log("Deployer balance:", ethers.formatEther(deployerBalanceAfter), "ETH");
    console.log("User1 balance:", ethers.formatEther(user1BalanceAfter), "ETH");

    // T√≠nh to√°n gas fee ƒë√£ s·ª≠ d·ª•ng
    const gasUsed = receipt?.gasUsed || 0n;
    const gasPrice = receipt?.gasPrice || 0n;
    const gasFee = gasUsed * gasPrice;

    console.log("\n‚õΩ Chi ph√≠ gas:");
    console.log("Gas used:", gasUsed.toString());
    console.log("Gas fee:", ethers.formatEther(gasFee), "ETH");

    console.log("\nüéâ Chuy·ªÉn ETH th√†nh c√¥ng!");
}

// X·ª≠ l√Ω l·ªói v√† ch·∫°y script
main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error("‚ùå L·ªói:", error);
        process.exit(1);
    });
